<?xml version="1.0" encoding="utf-8"?>
<?xsl-stylesheet type="text/xsl" href="../transforms/xsl/module/module2html.xsl"?>

<!-- for a PP or Functional Package -->
<?xml-model href="../transforms/schemas/CCModule.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>

<!-- For PP or cPP -->
<!-- Name of the TOE product  -->
<!-- Plural name of the TOE product (optional)  -->
<!-- Whether to use boilerplate text by default (can be disabled in sections) -->
<!-- A short name for the PP (e.g. App or MDF) -->
<Module boilerplate="yes" target-product="Enterprise Session Controller" 
  name="Enterprise Session Controller"
  xmlns="https://niap-ccevs.org/cc/v1"
  xmlns:sec="https://niap-ccevs.org/cc/v1/section"
  xmlns:h="http://www.w3.org/1999/xhtml">

<!--    <cPP/>    -->                                 <!-- This empty element must be included here if this is a cPP. It must not be here if it is not.  -->

<!-- for FP -->
<!--
<Package name="TLS"                                   
    xmlns="https://niap-ccevs.org/cc/v1"
    xmlns:h="http://www.w3.org/1999/xhtml"
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"
-->

<!-- For a PP-Module 
<Module
    name="Widget Clients"                              # Name of the Module  
    xmlns="https://niap-ccevs.org/cc/v1"               # Some html magic
    xmlns:h="http://www.w3.org/1999/xhtml"             # uses the "h" namespace for inline HTML
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"   # The "sec" namespace for sections is available
    target-product="Widget"                            # Name of the TOE product
    target-products="Widgets"                          # Plural name of the TOE product (optional)
    boilerplate="yes"                                  # Whether to use boilerplate text by default (can be disabled in sections)
    short="Wid">                                       # A short name for the PP (e.g. App or MDF)
-->

  <!-- PPReference (all documents) -->
  <PPReference>
    <ReferenceTable>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2024-03-28</PPPubDate>
      <Keywords>QQQQ</Keywords>               <!-- This field is unused and optional -->
    </ReferenceTable>
  </PPReference>

<!-- Revision History (all documents) -->
  <RevisionHistory>
    <entry>
      <version>Round 1</version>
      <date>2015-04-23</date>
      <subject>First draft of version 1.0 for comment</subject>
    </entry>
    <entry>
      <version>1.0</version>
      <date>2015-08-14</date>
      <subject>Release - first version released</subject>
    </entry>
    <entry>
      <version>2.0</version>
      <date>2024-03-28</date>
      <subject>Updated for CC:2022, or whatever</subject>
    </entry>
  </RevisionHistory>

<!-- Included Packages (all documents) (optional) -->
<!-- One entry for each package -->
    <include-pkg id="tls">
      <git>
	    <url>https://github.com/commoncriteria/tls</url>  <!-- url of github repo -->
	    <branch>release-1.1</branch>                      <!-- github branch of published version -->
      </git>
      <url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=439&amp;id=439</url>  <!-- url of published document on NIAP site -->
      <depends on="pizza"/>     <!-- If package inclusion is dependent on something. Absent if package inclusion is mandatory -->
	</include-pkg>
	    
	<include-pkg id="ssh">
	  <git>
	    <url>https://github.com/commoncriteria/ssh</url>
	    <branch>release-1.0</branch>
	  </git>
	  <url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=389&amp;id=389</url>
   </include-pkg>	

<!-- Modules (optional). A properly constructed PP does not need this section. -->
<!-- It is abomination that PPs refer to Modules. This should never happen. -->
<!-- But this is how it is done. But don't do it.  -->
<!--
   <modules required="yes">
      <module id="client-virt">
		<git>
			<url>https://github.com/commoncriteria/clientvirtualization</url>
			<branch>master</branch>
		</git>
        <url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=409&amp;id=409</url> 
	  </module>
      <module id="server-virt">
		<git>
			<url>https://github.com/commoncriteria/servervirtualization</url>
			<branch>master</branch>
		</git>
		<url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=410&amp;id=410</url>
	  </module>
   </modules>
-->

<!-- PP Preferences (all documents) -->
<pp-preferences>
     <!-- Indicate that audit events are defined with their SFRs -->
	 <!-- All new documents should do it this way. This will become the default, if it hasn't already.  -->
	 <!-- And this preference might not even be necessary. I should test it. -->
     <audit-events-in-sfrs/>         
	 
	 <!-- Indicates that audit events will be displayed along the associated SFR in the published document -->
	 <!-- rather than in an audit table. -->
<!--     <display-audit-with-sfrs/>     -->

	 <!-- Indicates that the document is using CC:2022. -->
	 <!-- This setting has already been deprecated, but is still allowed for backward compatiblity -->
	 <!-- New douments shoudl use the <CClaimsInfo> element to specify CC:2022 --> 
     <using-cc2022/>     
  </pp-preferences>


  <!-- Introduction (all documents) -->
  <section title="Introduction" id="sec-intro">

    <!-- PP or TOE Overview -->

    <section title="PP Overview" id="sec-ppoverview">
		<h:p>The scope of this PP-Module is to describe the security functionality of an Enterprise Session Controller
		(ESC) in terms of [CC] and to define functional and assurance requirements for such products. This PPModule is intended for use with the following Base-PPs:
		</h:p>
		<h:ul><h:li>collaborative Protection Profile for Network Devices (NDcPP), Version 2.2e
		</h:li></h:ul>
		<h:p>This Base-PP is valid because a device that implements an ESC is a specific type of network device, and
		there is nothing about the implementation of an ESC that would prevent any of the security capabilities
		defined by the Base-PP from being satisfied. This PP-Module does not mandate a particular architecture;
		the TOE may be either standalone or distributed as permitted by the Base-PP.</h:p>

		<!-- ...the PP overview briefly describes the usage of the TOE and its major security features,
    	identifies the TOE type, and identifies any major non-TOE hardware/software/firmware available
		to the TOE.
		-->   

	</section>  <!-- PP Overview -->
	
	<!-- CC and Tech terms.  -->
	<!-- CC terms are auto-generated -->
	<!-- All tech terms are generated from the list below. -->
	<!-- You should add and delete tech terms as required by the technology type. -->
	<tech-terms>
	  <!-- To remove an irrlevant CC term from the document, use the <suppress> element -->
      <suppress>Distributed TOE</suppress>   


      <term full="Audit Log">
		A persistent record of security-relevant events such as administrative access,
		administrative actions performed, system failures, and the establishment and
		termination of remote communications.
      </term>
	  <term full="Call Detail Record" >A log of call metadata that can be used to determine characteristics of a call, such as
		its length and involved parties, without recording any of its content.</term>
      <term full="Call Processing">The act of translating a dialed phone number into an attempt to establish a
connection with the appropriate party; this is in contrast to the actual transmission of
voice/video media over a call.</term>
	  <term full="Enterprise Session Controller">A type of network device that is responsible for establishment, processing, and termination of Voice/Video over IP (VVoIP) calls.</term>
	  <term full="Service Provider" >A third-party telecommunications company that is responsible for providing
commercial service and connectivity to the worldwide telephone network.
</term>
	  <term full="Session Border Controller">A type of network device that resides on the edge of a VVoIP network that is
		responsible for filtering corrupted or potentially malicious traffic and preventing it
		from entering or leaving the network.</term>
	  <term full="System Log">A live display of system characteristics that can be viewed on demand to diagnose
system performance in real-time. This data is typically only stored for a short period
of time if at all.</term>
	  <term full="Telecommunications Device" >In this PP-Module, used to refer generally to any piece of infrastructure equipment
		that the ESC may connect to other than a VVoIP Endpoint, which could include
		equipment such as a call conferencing server or Session Border Controller.
		</term>
		<term full="Trunking">The concept of connecting multiple networks together; analogous to the use of a T1 line in a legacy telephone network.</term>
		<term full="VVoIP Endpoint">A VVoIP-capable phone or software application that a human user can use to make or receive a voice or video call.</term>
	  <term full="Call Detail Record" abbr="CDR"/>
	  <term full="Enterprise Session Controller" abbr="ESC"/>
	  <term full="Internet Protocol Private Branch Exchange" abbr="IP-PBX"/>
	  <term full="Media Gateway Control Protocol" abbr="MGCP"/>
	  <term full="Collaborative Protection Profile for Network Devices" abbr="NDcPP"/>
	  <term full="Operations, Administration, and Management" abbr="OA&amp;M"/>
	  <term full="Organizational Security Policies" abbr="OSP"/>
	  <term full="Session Border Controller" abbr="SBC"/>
	  <term full="Session Initiation Protocol" abbr="SIP"/>
	  <term full="Voice/Video over IP" abbr="VVoIP"/>

    </tech-terms>    

	<!-- Other sections can be added here. -->
	<!-- Commen examples include Scope of Document, Intended Audiance, Compliant Targets of Evaluation,
	     TOE Boundary, TOE Operational Environment, and Roles. These sections can also be included in the
		 TOE/PP Overview aove. -->
    <section title="Compliant Targets of Evaluation" id="sec-TOEdescription">
	<h:p>The Target of Evaluation (TOE) that is defined by the combination of the NDcPP and this PP-Module is a
network device, either a dedicated appliance with a non-modifiable operating system, or a generalpurpose server running an independent commercially-available operating system that provides ESC
functionality. Regardless of whether the TOE is a standalone appliance or a general-purpose server that is
configured to function as an ESC, the TOE must be capable of satisfying all of the mandatory requirements
of the NDcPP.</h:p><h:p>An ESC is a privately-owned telecommunication switch where its primary function is to set up, process,
and terminate voice and video calls over an enterprise-wide Internet Protocol (IP) network. ESC operation
is analogous to the tasks of 1930’stelephone switchboard-operators, which is to patch (connect) together
callers to callees. But today’s ESC executes switchboard operations automatically, while providing
simultaneous connectivity to hundreds of callers virtually instantaneously. In addition to establishing,
processing, and managing thousands of connected calls, most ESCs support auxiliary services such as
VVoIP Conferencing, Voicemail, Chat, Telepresence, Encrypted Communications, and Protocol Translation
for end-to-end connectivity of diverse endpoints.</h:p><h:p>ESCs are commonly known as Call Servers, Communications Servers, and Call-Processing Systems, and
they vary in complexities and capabilities. The typical ESC can manage thousands of calls between diverse
client devices such as VoIP-handsets, Softphones, Desktop Telepresence Systems, Room-size Video
Telepresence Systems, and Mobile Devices. ESCs are normally installed within a SCIF or other entrycontrolled environment, especially systems that can register numerous VVoIP endpoints. To protect the
ESC, a Session Border Controller (SBC) is installed on the outer edge of the VVoIP network to help protect
the ESC from external network attacks. Also note that a fairly robust ESC system includes many major
components such as its own database, operating system (O/S), conferencing system, dialplan, network
manager, call-signaling protocols (e.g. H.323, Session Initiation Protocol (SIP), SS7), and its own
‘Operations, Administration, and Management (OA&amp;M)’ application system.</h:p><h:p>If any one of these major components is successfully attacked, then one can expect the entire ESC system
to be negatively impacted. The intention of this PP-Module is to provide a list of security requirements
needed by an ESC for protection of its functionality and protection of the VVoIP communications it is
responsible for facilitating.</h:p>
		</section>
      <sec:TOE_Boundary>
	  <h:p>An ESC is a logical component of a physical hardware appliance that is responsible for establishing
connectivity between VVoIP endpoints. The ESC is an advanced version of a legacy IP-PBX system. As a
specific type of network device, an ESC TOE will be evaluated against both the NDcPP and this PP-Module.
All functionality described by the SFRs are within the TOE boundary, as is the ability for the TSF to establish
secure remote connections with trusted entities in the OE.</h:p><h:p>Figure 1 below shows a typical VVoIP infrastructure in which an ESC is deployed.</h:p>
        <figure entity="images/network_diagram.png" title="Representative ESC Deployment" id="toe"/>
		<h:p>As can be seen from this figure, the ESC’s purpose is to provide an interface between VVoIP networks in order
		to connect calls. The ESC depends on or communicates with a number of services that are located within the
		internal network such as voicemail, conferencing, Network Time Protocol (NTP), Domain Name System, and
		software updates that are downloaded from VVoIP endpoint manufacturers and stored on the ESC for
		distribution to the clients.</h:p><h:p>Certain storage capabilities may be implemented exclusively within the TOE or within both the TOE and its OE (such as the TOE maintaining an internal audit log that is also written to an external audit server).</h:p><h:p>For connecting networks, the ESC relies on edge routing to handle lower-level communications between
		the networks and on a SBC to filter out potentially malicious activity.</h:p><h:p>The ESC itself, which can be administered locally or remotely, consists of several different logical
		components, as shown in Figure 2 below.</h:p>
		<figure entity="images/components_diagram.png" title="ESC Components" id="c-toe"/>
		<h:p>As can be seen from the figure above, the ESC provides the following logical capabilities:</h:p><h:ul>
		<h:li>OA&amp;M – Responsible for providing a management interface to the ESC’s configuration.</h:li>
		<h:li>Call Processing – Responsible for setting up and tearing down calls between VVoIP endpoints using
		one or more call control protocols.</h:li>
		<h:li>Call Detail Records – Responsible for storage of call activity for auditing purposes.</h:li>
		<h:li>Voice/Video Media Conferencing, Controls, and Storage – responsible for establishing multi-way
		conference calls and storage of call recordings.</h:li>
		</h:ul>Different ESCs may implement these capabilities in different ways. This PP-Module defines a minimum
baseline of capabilities that all conformant ESCs must provide.
      </sec:TOE_Boundary>

	  <sec:Use_Cases>
	  <h:p>Requirements in this PP-Module are designed to address the security problem in the following use cases.
		Use cases are not mutually exclusive; a TOE may implement more than one of these use cases. The
		description of these use cases provide instructions for how the TOE and its OE should be made to support
		the functionality required by this PP-Module.
		</h:p><h:p>This PP-Module defines four potential use cases for the ESC TOE:</h:p>
	  
	   <usecases>
        <usecase id="usecase1" title="Dedicated Appliance">
          <description>The ESC is sold and packaged as a standalone network appliance that does not have a direct interface to the underlying platform operating system, customized application, or commercialoff-the-shelf database.</description>
        </usecase>
		<usecase id="usecase2" title="Call Processing (Connect VVoIP Calls Together)">
          <description>The ESC serves as a call control system that employs multiple technologies for processing and
			managing voice/video calls between end-point devices. The ESC receives a call-request message
			from the source IP-phone (endpoint-A) and then locates and connects the call-originator to the
			destination device (endpoint-B). The ESC is used as a centralized system to process, manage, and
			connect calls between registered IP-phones. It should be noted that H.323 and SIP are the ESC’s
			most commonly used call-processing (i.e. call control) protocols. Both H.323 and SIP are used to
			set up, process, and terminate voice/video calls between endpoints. Supplemental call control
			protocols such as Media Gateway Control Protocol (MGCP) and SS7 do not limit ESC capabilities,
			but instead enhances its functionality. Both H.323 and SIP provide an ESC with the capabilities
			required for execution of all use cases. Both H.323 and SIP provide the ESC with call control
			capabilities, support trunking between the ESC and Service Providers, support trunking between
			an array of ESCs, and can use encryption schemes that secure the ESC’s call control functions.
					</description>
        </usecase>
		<usecase id="usecase3" title="Trunk Calls to/from Telecommunications Service Provider">
          <description>The ESC may support the ability to bundle numerous calls that originate from locally-registered
			VVoIP devices onto an ESC’s communication trunk for connectivity through a telecommunications
			service provider (e.g. Verizon) to remote endpoints. In this case, the ESC supports the aggregation
			of traffic for all registered IP devices for the purpose of passing local calls over a single trunk to an
			external service provider. This allows for a simplified network deployment where a single
			connection from the ESC to the service provider can support a large number of devices, rather
			than requiring each individual device to connect to the service provider separately.
          </description>
        </usecase>
		<usecase id="usecase4" title="Trunk Calls in/out to Remote ESCs">
          <description>Similar to trunking calls to telecommunications service providers, the ESC can trunk a large volume
			of calls to other remote ESCs. An example of this deployment is a meshed configuration of trunkconnected ESCs that are deployed to support a metropolitan-sized enterprise-wide VVoIP callprocessing network. This particular type of use case may not require any of the meshed ESCs to
			be connected to a service provider.
          </description>
        </usecase>
	
		</usecases>
		</sec:Use_Cases>
		</section>
     <!-- Compliant TOEs -->
<section title="Conformance Claims" id="sec-cclaims" >

	<!-- cc-version: cc-2022r1 or cc-31r5   -->
	<!-- cc-approach: standard or direct-rationale  -->
	<!-- display: Should this info be displayed in the Conformance -->
	<!-- Claims section? If no, you have to write a free-form section -->
	<CClaimsInfo 
		cc-version="cc-2022r1"         
		cc-approach="standard"         
		display="yes">                 

		<!-- Conformance for STs: exact, strict, or demonstrable -->
		<cc-st-conf>exact</cc-st-conf>                  

		<!-- Part 2 & 3 conformance (extended or conformant) -->
		<cc-pt2-conf>extended</cc-pt2-conf>           
		<cc-pt3-conf>conformant</cc-pt3-conf>           

		<!-- Claims conformance to these other PPs (none)-->
		<cc-pp-conf/>              		  
		
		<!-- Can be in a configuration with these PPs and Modules -->
		<cc-pp-config-with/>

		<!-- Package claims -->
		<cc-pkg-claim/>		
		

	</CClaimsInfo>
  </section>  



  <!-- Conformance Claims Section -->
  <!-- New conformance claims section for CC:2022. -->
  <!-- If boilerplate is "yes" something that is probably incorrect is generated -->
  
  

  
  <section title="Security Problem Definition" id="sec-spd">
  <h:p>The security problem is described in terms of the threats that the TOE is expected to address, assumptions
	about its operational environment, and any organizational security policies that the TOE is expected to
	enforce.</h:p><h:p>The ESC is a network appliance that incorporates multiple components and protocols, and is designed
	with the purpose of connecting and managing calls that emanate from registered VVoIP endpoints. The
	ESC is also designed to provide centralized control of an enterprise-wide VVoIP communication network.
	As the central control system that manages and processes VVoIP calls from as many as 50,000 endpoints
	per node, it is critically important for the ESC to be protected because it is a single point of failure for tens
	of thousands of end-users.</h:p><h:p>As a centralized system the ESC is subject to attacks from the VVoIP endpoints that are registered to the
	ESC. Any VVoIP endpoint could be a threat to launch a malicious attack against the ESC. Therefore the ESC
	shall possess the security requirements needed for mitigating such a threat type.
	</h:p><h:p>Note that as PP-Module of the NDcPP, all threats, assumptions, and Organizational Security Policies (OSPs)
	defined there will also apply to an ESC TOE unless otherwise specified.
	</h:p><h:p>The Security Functional Requirements (SFRs) defined in this PP-Module will mitigate the threats that are
	defined in the PP-Module but will also mitigate some NDcPP threats in more comprehensive detail due to
	the specific capabilities provided by an ESC.</h:p>


    <section title="Threats" id="sec-threats">
	The following threats defined in this PP-Module extend the threats defined by the Base-PP.
	
      <threats>
        <threat name="T.MALICIOUS_TRAFFIC" id="t-malicious-traffic">
          <description> A malformed packet is a protocol packet containing modified data not recognizable by the receiving
			device (e.g. TOE), or contains modified protocol packets intended to crash or cause the TOE to act in
			ways unintended. An attacker may attempt to use a VVoIP endpoint to send these malformed packets
			or malicious traffic towards the TOE in an attempt to control or crash the call control system and
			connected network devices. To mitigate VVoIP endpoint devices from being used to successfully
			launch malicious traffic, the TOE must provide encryption remedies to prevent modification of
			protocol packets. The TOE must also provide authentication mechanisms to prevent unauthorized
			VVoIP endpoints from improperly registering to the ESC for the purpose of launching malicious
			attacks.</description>
			</threat>
			<threat name="T.NETWORK_DISCLOSURE" id="t-network-disclosure"><description> An attacker may attempt to “map” IP addresses of VVoIP endpoint/devices and other
			telecommunications equipment for the purpose of determining the organizational structure of the
			enterprise, providing reconnaissance for future targeted attacks.</description></threat>
			<threat name="T.UNAUTHORIZED_CLIENT" id="t-unauthorized-client"><description>An attacker may attempt to register an unauthorized VVoIP endpoint to the TOE for the purpose of
			impersonating a legitimate end user device in order to gain unauthorized connectivity to other clients
			or active calls.</description></threat>
      </threats>
    </section>  <!-- Threats -->
	
	<!-- Assumptions refer to operational objective objectives regardless of whether -->
	<!-- the document uses standard or direct rationale. -->
	
    <section title="Assumptions" id="sec-assumptions">
	All assumptions for the operational environment of the Base-PP also apply to this PP-Module.
	A.NO_THRU_TRAFFIC_PROTECTION is still operative, but only for the interfaces in the TOE that are
	defined by the Base-PP and not the PP-Module.
      
    </section>   <!-- Assumptions -->
	
	<!-- OSPs refer to Objectives or OE Objectives in standard approach documents. -->
	<!-- In direct rationale PPs, they should refer to OE Objectives -->
    <section title="Organizational Security Policies" id="sec-OSPs">
      <OSPs>
        <OSP name="P.SECURED_PLATFORM">
          <description>Administrators in the organization ensure that general purpose computers use secure operating
systems and are configured in accordance with applicable security standards.</description>
    
        </OSP>
      </OSPs>
    </section>   <!-- OSPs -->
	
	<!-- If there are no OSPs, then this: -->
<!--	<section title="Organizational Security Policies" id="sec-osp" boilerplate="no">
        <OSPs/>
    </section> 
-->
	
  </section>  <!-- Security Problem Definition -->
  
  
  <!-- This section is mandatory for standard approach documents.   -->
  <!-- It should be included in direct rationale documents if there are OE Objectives. -->
  <section title="Security Objectives" id="sec-objectives">
  
	<!-- This section is omitted for direct rationale documents -->
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO name="O.ACCOUNTABILITY">
          <description> Conformant OSes ensure that information exists that allows
            administrators to discover unintentional issues with the configuration and operation of
            the operating system and discover its cause.  Gathering event information and immediately
            transmitting it to another system can also enable incident response in the event
            of system compromise.</description>
          <addressed-by>FAU_GEN.1</addressed-by><rationale>'cause FAU_GEN.1 is awesome</rationale>
          <addressed-by>FTP_ITC_EXT.1</addressed-by><rationale>Cause FTP reasons </rationale>
        </SO>
        <SO name="O.INTEGRITY">
          <description>Conformant OSes ensure the integrity of their update
            packages. OSes are seldom if ever shipped without errors, and the
            ability to deploy patches and updates with integrity is critical to enterprise network
            security. Conformant OSes provide execution environment-based
            mitigations that increase the cost to attackers by adding complexity to the task of
            compromising systems. </description>
            <addressed-by>FPT_SBOP_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FPT_ASLR_EXT.1</addressed-by><rationale>ASLR For reasons </rationale>
            <addressed-by>FPT_TUD_EXT.1</addressed-by><rationale>For reasons </rationale>
        </SO>
        <SO name="O.MANAGEMENT">
          <description> To facilitate management by users and the enterprise, conformant OSes
	    provide consistent and supported interfaces for their
            security-relevant configuration and maintenance. This includes the deployment of
            applications and application updates through the use of platform-supported deployment
            mechanisms and formats, as well as providing mechanisms for configuration and
            application execution control. </description>
            <addressed-by>FMT_MOF_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FMT_SMF_EXT.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FTA_TAB.1</addressed-by><rationale>For reasons </rationale>
            <addressed-by>FTP_TRP.1</addressed-by><rationale>For reasons </rationale>
        </SO>
      </SOs>
    </section>  <!-- Security Objectives for the TOE -->

	<!-- This section is included in direct rationale documents if there are OE Objectives -->
    <section title="Security Objectives for the Operational Environment" id="sec-OEObjectives">
	  <SOEs>
        <SOE name="OE.PLATFORM">
          <description>The OS relies on being installed on trusted
            hardware.</description>
        </SOE>
        <SOE name="OE.PROPER_USER">
          <description> The user of the OS is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security policy.
            Standard user accounts are provisioned in accordance with the least privilege model.
            Users requiring higher levels of access should have a separate account dedicated for
            that use. </description>
        </SOE>
        <SOE name="OE.PROPER_ADMIN">
          <description> The administrator of the OS is not careless, willfully
            negligent or hostile, and administers the OS within compliance of the applied enterprise
            security policy. </description>
        </SOE>
      </SOEs>
	</section>  <!-- OE Objectives -->

	<!-- This section is automatically generated, but this placeholder is reuired -->
    <section title="Security Objectives Rationale" id="sec-sor"/>

  </section>  <!-- Security_Objectives  -->


  
  <sec:Security_Requirements>
    <base-pp id="ND" version="3.0e" name="Network Device" product="Network Device" short="ND" plural="Network Devices">
      <url>https://www.niap-ccevs.org/protectionprofiles/482</url>
      <cPP/>
      <sec-func-req-dir> 
xxxxx
      </sec-func-req-dir>
      <modified-sfrs/>
      <additional-sfrs/>
      <con-toe>
     xxxxx
      </con-toe>
      <con-sec-prob>
	 xxxx
	  </con-sec-prob>
      <con-obj></con-obj>
      <con-op-en>xxxx </con-op-en>
      
      
      <con-mod ref="T.NETWORK_ACCESS">
xxxx
	  </con-mod>
      <con-mod ref="T.NETWORK_DISCLOSURE">

	  </con-mod>
	  <con-mod ref="T.NETWORK_DOS">

	  </con-mod>
	  <con-mod ref="T.NETWORK_MISUSE">

	  </con-mod>
	  <con-mod ref="T.NETWORK_MISUSE">

	  </con-mod>
	  <con-mod ref="A.CONNECTIONS">

	  </con-mod>
	  <con-mod ref="P.ANALYZE">

	  </con-mod>
	  <modified-sfrs>
	  <section title="Security Audit (FAU)" id="m-fau">
			<f-component name="Audit Data Generation (Audit Log)" cc-id="fau_gen.1"  id="fau-gen-1-esc">FAU_GEN.1.1 is refined to include the following auditable events in addition to what is defined in the
Base-PP.

	    <audit-table table="mandatory" id="mandatory-audit-events">
	      <h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-mandatory">: Audit Log Events</ctr></h:b>
	    </audit-table>
		<note role='application'><h:i><h:p>The Base-PP version of the SFR requires “all administrative actions” to be audited.
		When the TOE includes this PP-Module, it is expected that this will also include the
		administrative actions that support the PP-Module defined in FMT_SMF.1/ESC.</h:p><h:p>FAU_VVR_EXT.2 is a selection-based requirement. Auditing for this requirement
		must be performed if and only if the TOE claims it</h:p>
		</h:i></note>

			</f-component>
			<f-component name= "Protected Audit Trail Storage" cc-id="fau_stg.1" id="fau-stg-1-esc">This SFR is optional in the NDcPP but is mandated by this PP-Module because the ESC is expected to
	maintain audit data internal to the TOE which must be protected from unauthorized access. 
	<note role='application'><h:i>Both the “audit data” (FAU_GEN.1) and “system log” data (FAU_GEN.1/Log) are
	expected to be protected from unauthorized access. This SFR applies to all data
	related to the behavior of the TOE regardless of how it is categorized or where it
	is stored.</h:i> </note></f-component>
	</section>
	<section title="Cryptographic Support" id="m-fcs">
			<f-component name="DTLS Server Support for Mutual Authentication" cc-id="fcs_dtlss_ext.1"  id="fcs-dtlss-ext-1">
			<f-element id='fcs-dtlss-ext-1e1'>
				<title>
				The TSF shall implement [<h:i>DTLS 1.2 (RFC 6347))</h:i>] supporting the following ciphersuites: <selectables> 	
					<selectable>select supported ciphersuites from List 1<h:b> in the NDcPP</h:b></selectable>
					</selectables>and no other ciphersuites.
				</title>
				<note role='application'><h:i><h:p>This SFR is selection-based in the NDcPP and remains selection-based in this PPModule because DTLS may be used to secure transmitted media. In this case, it
				must be claimed if ‘DTLS’ is selected in FTP_ITC.1.1/ESC in addition to the
				applicable selection triggers in the Base-PP.</h:p>
				<h:p>This SFR is also refined from its definition in the Base-PP by requiring the use of
				DTLS 1.2 if this function is claimed.</h:p>
				</h:i>
				</note>
				<aactivity><no-tests/></aactivity>
				
				</f-element>
			</f-component>
			<f-component name="DTLS Server Support for Mutual Authentication" cc-id="fcs_dtlss_ext.2"  id="fcs-dtlss-ext-2">This SFR is optional in the NDcPP but is selection-based in this PP-Module because any ESC use of DTLS
			requires mutually-authenticated DTLS to be implemented. Therefore, this SFR must be claimed if ‘DTLS’ is
			selected in FTP_ITC.1.1/ESC.
			</f-component>
			<f-component name="NTP Protocol" cc-id="fcs_ntp_ext.1" id="fcs-ntp-ext-1">
			<f-element id='fcs-ntp-ext-1e1'>
			<title>The TSF shall use only the following NTP version: [<h:i>NTP v4 (RFC 5905)</h:i>].</title>

			<note role="application"><h:i><h:p>te: This SFR is selection-based in the Base-PP but is mandatory for a TOE that
			conforms to this PP-Module because the refinement to FPT_STM_EXT.1 requires
			this SFR to be claimed in all cases.</h:p><h:p></h:p>This SFR has been refined from the NDcPP to permit the NTP v4 selection only. No
			other parts of the SFR are modified.</h:i></note>
			<aactivity><no-tests/></aactivity>
			</f-element></f-component>
			<f-component name="TLS Client Protocol without Mutual Authentication" cc-id="fcs_tlsc_ext.1" id="fcs-tlsc-ext-1">
			<f-element id='fcs-tlsc-ext-1e1'>
				<title>The TSF shall implement [<h:i>TLS 1.2 (RFC 5246))</h:i>] and reject all other TLS and SSL
				versions. The TLS implementation will support the following ciphersuites:
				<selectables>
					<selectable>select supported ciphersuites from List 1 <h:p>in the NDcPP</h:p></selectable>
				</selectables> and no other ciphersuites.
				<note role='application'><h:i>This SFR is selection-based in the NDcPP but is mandated by this PP-Module
				because Transport Layer Security (TLS) is used to secure SIP and H.323
				communications. Additionally, this PP-Module mandates the use of TLS 1.2.</h:i></note></title>
				<aactivity><no-tests/></aactivity>
				</f-element></f-component>
			<f-component name="TLS Client Protocol Mutual Authentication" cc-id="fcs_tlsc_ext.2" id="fcs-tlsc-ext-2">This SFR is optional in the NDcPP but is mandated by this PP-Module because SIP and H.323
				communications require mutually-authenticated TLS.</f-component>
				<f-component name="TLS Server Protocol without Mutual Authentication" cc-id="fcs_tlss_ext.1" id="fcs-tlss-ext-1">
				<f-element id='fcs-tlsc-ext-1e1'>
				<title>The TSF shall implement [<h:i>TLS 1.2 (RFC 5246))</h:i>] and reject all other TLS and SSL
				versions. The TLS implementation will support the following ciphersuites: <selectables>
				<selectable>select supported ciphersuites from List 1 <h:p>in the NDcPP</h:p></selectable></selectables> and no other
				ciphersuites.</title>
				<note role='application'><h:i>This SFR is selection-based in the NDcPP but is mandated by this PP-Module
				because TLS is used to secure SIP and H.323 communications. Additionally, this
				PP-Module mandates the use of TLS 1.2.</h:i></note>
				<aactivity><no-tests/></aactivity>
				</f-element></f-component>
			<f-component name="TLS Server Protocol  Mutual Authentication" cc-id="fcs_tlss_ext.2" id="fcs-tlss-ext-2">
			This SFR is optional in the NDcPP but is mandated by this PP-Module because SIP and H.323 communications require mutually-authenticated TLS.
			</f-component>
			</section>
			<section title='Identification and Authentication (FIA)' id='m-fia'>
			<f-component name="X.509 Certificate Validation" cc-id='fia_x509_ext.1' id='fia-x509-ext-1' iteration='Rev'>
			This SFR is selection-based in the Base-PP. It is mandatory when the TOE claims conformance to this PPModule because X.509 certificate validation is needed when establishing TLS communications for SIP and H.323. There are no changes to the SFR otherwise.
			
			</f-component>
			<f-component name="X.509 Certificate Authentication" cc-id='fia_x509_ext.2' id='fia-x509-ext-2' >
			<f-element id='fia-x509-ext-2e1'>
				<title>The TSF shall use X.509v3 certificates as defined by RFC 5280 to support
authentication for <h:b>TLS,</h:b> <selectables>
			<selectable>DTLS</selectable>
			<selectable>HTTPS</selectable>
			<selectable>IPsec</selectable>
			<selectable>SSH</selectable>
			<selectable>no other protocols</selectable></selectables>, <h:b>VVoIP endpoint registration,</h:b> and  <selectables><selectable>code signing for system software
updates</selectable>
			<selectable><assignable>other uses</assignable></selectable>
			<selectable>no additional</selectable></selectables>
			</title>
			<note role='application'>
			<h:i>The NDcPP requires the ST author to select the protocol(s) that certificate
			authentication is used for. This element has been modified from its definition in
			the Base-PP by mandating support for TLS because FCS_TLSC_EXT.1 and
			FCS_TLSS_EXT.2 are mandatory SFRs for a TOE that conforms to this PP-Module.
			Additional protocols may or may not be selected depending on the other
			functionality provided by the TSF</h:i></note>
			<aactivity><no-tests/></aactivity>
			</f-element>
			<f-element id='fia-x509-ext-2e2'>
			<title>When the TSF cannot establish a connection to determine the validity of a
			certificate, the TSF shall <selectables>
			<selectable>allow the administrator to choose whether to
			accept the certificate in these cases</selectable>
			<selectable>accept the certificate</selectable>
			<selectable>not accept the
			certificate</selectable>
			</selectables>.</title>
			<note role='application'><h:i>This SFR is selection-based in the Base-PP but is made mandatory when this PPModule is claimed because the ESC implements functionality that requires the use of certificate authentication.</h:i></note>
			</f-element>
			</f-component>
			<f-component name="X.509 Certificate Requests" cc-id='fia_x509_ext.3' id='fia-x509-ext-3'>
			This SFR is selection-based in the NDcPP but is mandated by this PP-Module because an ESC must
			implement security functions that require it to be issued its own X.509 certificate.
			</f-component>
			</section>
		<section title='Protection of the TSF (FPT)' id='m-fpt'>
		<f-component name="Reliable Time Stamps" cc-id='fpt_stm_ext.1' id='fpt-stm-ext-1'>
		<f-element id='fpt-stm-ext-1e1'>
		<title>The TSF shall [<h:i>synchronize time with an NTP server</h:i>]. </title>
		<note role='application'><h:i>This SFR has been refined from the NDcPP to permit the NTP server selection only. No other parts of the SFR are modified.</h:i></note>
		</f-element>
		</f-component>
			
			</section>
	  </modified-sfrs>
    </base-pp>
	<man-sfrs>
    <section title='Security Audit (FAU)' id='man-fau'>
		<f-component name="Audit Data Generation (Call Detail Record)" cc-id='fau_gen.1-cdr' id='fpt-gen-ext-1-cdr' iteration='CDR'>
		<f-element id='fau-gen-1e1-cdr'>
		<title>The TSF shall be able to generate a <h:b>call detail</h:b> record <h:b>(CDR)</h:b> for <h:b>communications
between VVoIP endpoints that are established by the TOE.</h:b></title>
<aactivity><no-tests/></aactivity></f-element>
		<f-element id='fau-gen-1e2-cdr'>
		<title>The TSF shall record within each CDR at least the following information: <h:b>[<h:lu>
		<h:li>calling party number (i.e. call originator)</h:li>
		<h:li>called party number (i.e. call receiver or terminating number)</h:li>
		<h:li>unique transaction sequence number</h:li>
		<h:li>call disposition (e.g. call connected, call terminated, call transferred)</h:li>
		<h:li>call type (e.g. voice only, voice and video, text)</h:li>
		<h:li>call start time</h:li>
		<h:li>call end time</h:li>
		<h:li>call duration</h:li>
		<h:li>unique identifier of the TOE</h:li>
		<h:li>call routing into TOE</h:li>
		<h:li>call routing out of TOE</h:li>
		<h:li>time zone</h:li>
		<h:li>call release cause, if applicable (i.e. reason for termination of call)</h:li>
		<h:li>fault condition(s), if applicable</h:li>
		</h:lu></h:b>]</title>
		<note role='application'><h:i>The TOE should be uniquely identified as part of the CDR so that there is
		attribution of individual CDRs in environments where multiple ESCs are feeding
		CDRs to a centralized server.</h:i></note>
		<aactivity><no-tests/></aactivity>
		</f-element>
		</f-component>
		<f-component name="g Audit Data Generation (System Log)" cc-id='fau_gen.1-log' id='fpt-gen-ext-1-log' iteration='Log'>
		<f-element id='fau-gen-1e1-log'>
		<title>The TSF shall be able to generate a <h:b>system log</h:b> record for <h:b>current IP connections,
			NTP status, CPU usage, memory usage, disk and file storage capacity, audit
			storage capacity, <selectables><selectable>power status</selectable><selectable>fan status</selectable><selectable>no other activities</selectable></selectables>.</h:b> </title>
			<aactivity><no-tests/></aactivity>
		</f-element>
		<f-element id='fau-gen-1e2-log'>
		<title>
		The TSF shall record within each system log record at least the following information: <h:ol type='a'>
			<h:li>Date and time of the event, type of event, subject identity (if applicable), and the outcome (success or failure of the event); and </h:li>
			<h:li>For each audit event type, based on the auditable event definitions of the functional components included in the PP/ST, [<h:i>event details described in System Log Events table</h:i>].</h:li></h:ol>
    <h:head><title>Event Table</title></h:head>
<h:table border='1'>
		<h:tr>
			<h:th>Event</h:th>
			<h:th>Additional System Log Record Contents</h:th>
			
		</h:tr>
		<h:tr>
			<h:th>Current IP connections</h:th>
			<h:th>Network interface card (NIC); Status (up or down).</h:th>
		</h:tr>
				<h:tr>
			<h:th>CPU usage </h:th>
			<h:th>Utilization percentage of TOE CPU(s).</h:th>
		</h:tr>
				<h:tr>
			<h:th>Memory usage</h:th>
			<h:th>Percentage and/or amount of free memory available for use.</h:th>
		</h:tr>
				<h:tr>
			<h:th>Disk and file storage capacity</h:th>
			<h:th>Percentage and/or amount of available space remaining for each disk or disk partition on the TOE.</h:th>
		</h:tr>
				<h:tr>
			<h:th>Fan status (conditional)</h:th>
			<h:th>Fan identification; Status (on or off).</h:th>
		</h:tr>
				<h:tr>
			<h:th>Power status (conditional) </h:th>
			<h:th>Status (on or off).</h:th>
		</h:tr>

		</h:table>

</title>
<aactivity><no-tests/></aactivity>
		</f-element>
		</f-component>
	</section>
		
	</man-sfrs>  <!-- SFRs -->
    
    <opt-sfrs>
	</opt-sfrs>		
	<obj-sfrs>
	</obj-sfrs>
    <sel-sfrs></sel-sfrs>
    
    <impl-dep-sfrs>
	
	</impl-dep-sfrs>
	


    </sec:Security_Requirements> <!-- Security Requirements  -->


<?modules
	<!-- Security Reuirements Section for Modules -->
	<section title="Security Requirements" id="sec-reqs">

		<!-- Requirements for Each Base PP -->
		<base-pp id="bpp-mdf"                                            <!-- unique ID within this document -->
             name="Protection Profile for Mobile Device Fundamentals"    <!-- Full name of Base PP  -->
             short="mdf"                                                 <!-- short name of Base PP  -->
             product="Mobile Device"                                     <!-- Base PP Product -->
             version="3.3">                                              <!-- Base PP version  -->

			<!-- Reference to Github repo of Base PP. -->
			<!-- If there is none, then this is omitted -->
			<git>
				<url>https://github.com/commoncriteria/mobile-device</url>       <!-- URL of base PP github repo --> 
				<branch>release-3.3</branch>                                     <!-- Github branch of release version  -->
			</git>

			<!-- URL of Base PP on the NIAP website  -->
			<url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=417&amp;id=417</url>

			<!-- Security Functional Requirements Direction -->
			<sec-func-req-dir>
				In a PP-Configuration that includes the MDF PP, the VPN client is expected to rely on some of the
				security functions implemented by the OS as a whole and evaluated against the Base-PP.
				In this case, the following sections describe any modifications that the ST author must make to the SFRs
				defined in the Base-PP in addition to what is mandated by section 5.5.
			</sec-func-req-dir>

			<!-- Requirements in the base PP that are modified by the Module -->
			<modified-sfrs>
				<section title="Identification and Authentication (FIA)" id="md-m-fia">    
					<!-- Modified SFRs from the FIA Family  -->
				</section>
				<section title="Security Management (FMT)" id="md-m-fmt">    
					<!-- Modified SFRs from the FMT Family   -->
				</section>
				<!-- etc. -->
			</modified-sfrs>
			
			<!-- SFRs that the Module adds to the base PP -->
			<additional-sfrs>
				<!-- Audit table for Additional SFRs -->
				<section id="sec-at-os-addnl" title="Auditable Events for GPOS Additional SFRs">
					<audit-table id="at-os-addnl" table="tab-at-os-addnl" title="Auditable Events for GPOS Additional SFRs"/>
				</section>	

				<section title="Cryptographic Support (FCS)" id="os-a-fcs">
					<ext-comp-def title="Cryptographic Key Management" fam-id="FCS_CKM_EXT">
					<fam-behavior>Components in this family describe requirements for key management functionality such as key
						storage and destruction.</fam-behavior>
					</ext-comp-def>
					<!-- Additional SFRs from the FCS Family (apparently at least one is EXT) -->
				</section>

				<section title="Security Management (FMT)" id="os-m-fmt">    
					<!-- Additional SFRs from the FMT Family  -->
				</section>
            	<!-- etc. -->
			</additional-sfrs>
			
			<!-- Consistency Rationale information for the base PP -->
			<!-- Consistency of TOE type -->
			<con-toe>
				If this PP-Module is used to extend the MDF PP, the TOE type for the overall TOE is still a mobile device.
				The TOE boundary is simply extended to include VPN client functionality that is built in to the device’s
				software so that additional security functionality is claimed within the scope of the TOE.  
			</con-toe>
			
			<!-- Consistency of Security Problem Definition -->
			<con-sec-prob>
				The threats and assumptions defined by this PP-Module (see sections 3.1 and 3.2) supplement
				those defined in the MDF PP as follows: 
			</con-sec-prob>
			
			<!-- Consistency of Objectives -->
			<!-- Introductory text for the consistency of objective table. -->
			<!-- This may be omitted for direct rational modules. If included it is ignored. -->
			<con-obj>
				The security objectives defined by this PP-Module (see sections 4.1 and 4.2) supplement 
				those defined in the MDF PP as follows:
			</con-obj>
			
			<!-- Consistency of Operational Environment Objectives -->
			<!-- This tag provides introductory text for the Consistency of OE objectives table. -->
			<!-- It can be left empty. -->
			<con-op-en></con-op-en>
			
			<!-- Consistency of Security Problem Description -->
			<!-- Rationales for threats and assumptions -->
			<con-mod ref="T.UNAUTHORIZED_ACCESS">The threat of an attacker gaining access to a network interface or data
				that is transmitted over it is consistent with the T.NETWORK and T.EAVESDROP threats in the MDF PP.
			</con-mod>
			<con-mod ref="A.TRUSTED_CONFIG">This assumption is consistent with the MDF PP because the MDF PP
				includes the A.CONFIG assumption which assumes that all security functions are appropriately configured.
			</con-mod>
			
			<!-- Consistency of Objectives -->
			<!-- In Direct Rationale modules, the Objective rationale are omitted -->
			<con-mod ref="O.KNOWN_STATE">This objective is consistent with the O.INTEGRITY objective of the
				MDF PP, which expects a conformant TOE to implement measures to maintain its own integrity.
			</con-mod>
			<con-mod ref="OE.NO_TOE_BYPASS">This objective addresses behavior that is out of scope of the MDF PP
				and does not define an environment that an MDF TOE is incapable of existing in.
			</con-mod>
			
			<!-- Consistency of Requirements -->
			<con-mod ref="md-fcs-ckm-1">The ST author is instructed to make specific selections at minimum to
				address VPN client requirements; the SFR behavior itself is unmodified.
			</con-mod>
			<con-mod ref="fcs-ipsec-ext-1">This SFR defines the VPN client’s IPsec implementation, which is added
				functionality that does not interfere with the MDF functions.
			</con-mod>
			<con-mod ref="fdp-rip-2">The requirement to protect against re-use of residual data is a property of
				the VPN client behavior and does not impact the MDF functionality.
			</con-mod>
			
		</base-pp>  
		
		<!-- etc. for all the base PPs -->
		
		<!-- After all the Base PP requirements come the Moduyle's own Requirements -->
		<!-- TOE Security Functional Requirements -->
		<!-- The order is weird. -->
		
		<!-- Mandatory SFRs -->
		<man-sfrs>
		
			<!-- Audit table for mandatory SFRs -->
			<section id="ss-audit-table" title="Auditable Events for Mandatory SFRs">
				<audit-table id="at-mandatory" table="mandatory">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-mandatory">: Auditable Events for Mandatory SFRs</ctr></h:b>
				</audit-table>
			</section>

			<!-- Mandatory SFRs. Classes and ECD information is required. -->
		
		</man-sfrs>

		<!-- SARs added by the Module. This is rare. -->
		<mod-sars>
			<!-- SARS added by the module. If none, this tag may be omitted. --> 
		</mod-sars>
		
		<!-- Optional SFRs -->
		<opt-sfrs>
			
			<!-- Audit table for optional SFRs -->
		    <section id="sop-audit-table" title="Auditable Events for Strictly Optional SFRs">
				<audit-table id="at-optional" table="optional">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-optional">: Auditable Events for Strictly Optional SFRs</ctr></h:b>
				</audit-table>
			</section>
			
			<!-- Optional SFRs. Classes and ECD information is required. -->
		
		</opt-sfrs>
		

		<!-- Selection-based SFRs -->
		<sel-sfrs>
			<section id="sb-audit-table" title="Auditable Events for Selection-based SFRs">
				<audit-table id="at-selbased" table="sel-based">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-sel-based">: Auditable Events for Selection-based SFRs</ctr></h:b>
				</audit-table>
			</section>

			<!-- Selection-based SFRs. Classes and ECD information is required. -->
		
		</sel-sfrs>

		<!-- Objective SFRs. This tag may be omitted if there are none. -->
		<obj-sfrs>
		
			<!-- Audit table for objective SFRs -->
		    <section id="sobj-audit-table" title="Auditable Events for Objective SFRs">
				<audit-table id="at-objective" table="objective">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-objective">: Auditable Events for Objective SFRs</ctr></h:b>
				</audit-table>
			</section>
			
			<!-- Objective SFRs. Classes and ECD information is required. -->
		</obj-sfrs>

		
		<!-- Implementation-dependent SFRs -->
		<impl-dep-sfrs>
			
			<section id="sib-audit-table" title="Auditable Events for Implementation-Dependent SFRs">
				<audit-table id="at-feat-based" table="feat-based">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-implbased">: Auditable Events for Implementation-Dependent SFRs</ctr></h:b>
				</audit-table>
			</section>
		
			<!-- implementation-dependent SFRs, etc. -->
		
		</impl-dep-sfrs>
		
	</section>   <!-- Security Requirements -->
?>





  <!-- 
		The following sections are auto generated from the SFRs in the SFR section.
		Appendix A: Optional Requirements 
			A.1: Strictly Optional Requirements
			A.2: Objective requirements
			A.3: Implementation-dependent SFRs
		Appendix B: Selection-based requirements
		Appendix C: Extended Component Definitions (if any)
  -->


	<!-- This should be included if there are SFRs that are dependencies for included SFRs, 
	     but the dependencies are not incluuded in the PP. -->
	<appendix title="Inherently Satisfied Requirements" id="satisfiedreqs"> 
		This appendix lists requirements that should be considered satisfied by products
		successfully evaluated against this Protection Profile.  
		However, these requirements are not featured explicitly as SFRs and should not be
		included in the ST.  
		They are not included as standalone SFRs because it would
		increase the time, cost, and complexity of evaluation.  This approach is permitted
		by <xref g="CC"/> Part 1, <h:b>8.2 Dependencies between components</h:b>.
		<h:br/>
		This information benefits systems engineering activities which call for inclusion of 
		particular security controls.  Evaluation against the Protection Profile
		provides evidence that these controls are present and have been evaluated.
		<table xmlns="http://www.w3.org/1999/xhtml">
			<tr class="header">
				<td>Requirement</td>
				<td>Rationale for Satisfaction</td>
			</tr>
			<tr>
				<td>FIA_UAU.1 - Timing of authentication</td>
				<td>
				  FIA_AFL.1 implicitly requires that the OS perform all necessary actions, 
				  including those on behalf of the user who has not been authenticated, 
				  in order to authenticate;
				  therefore it is duplicative to include these actions as a 
				  separate assignment and test.
				</td>
			</tr>
			<tr>
				<td>FIA_UID.1 - Timing of identification</td>
				<td>
				  FIA_AFL.1 implicitly requires that the OS perform all necessary actions, 
				  including those on behalf of the user who has not been identified, 
				  in order to authenticate;
				  therefore it is duplicative to include these actions as a 
				  separate assignment and test.
				</td>
			</tr>
			<tr>
				<td>FMT_SMR.1 - Security roles</td>
				<td>
				  FMT_MOF_EXT.1 specifies role-based management functions that implicitly defines
				  user and privileged accounts; 
				  therefore, it is duplicative to include separate role requirements.
				</td>
			</tr>
			<tr>
				<td>FPT_STM.1 - Reliable time stamps</td>
				<td>
				  FAU_GEN.1.2 explicitly requires that the OS associate timestamps with audit records;
				  therefore it is duplicative to include a separate timestamp requirement.
				</td>
			</tr>
			<tr>
				<td>FTA_SSL.1 - TSF-initiated session locking</td>
				<td>
					  FMT_MOF_EXT.1 defines requirements for managing session locking;
					  therefore, it is duplicative to include a separate session locking requirement.
				</td>
			</tr>
			<tr>
				<td>FTA_SSL.2 - User-initiated locking</td>
				<td>
				  FMT_MOF_EXT.1 defines requirements for user-initiated session locking;
				  therefore, it is duplicative to include a separate session locking requirement.
				</td>
			</tr>
			<tr>
				<td>FAU_STG.1 - Protected audit trail storage</td>
				<td>
				  FPT_ACF_EXT.1 defines a requirement to protect audit logs;
				  therefore, it is duplicative to include a separate protection of audit trail requirements.
				</td>
			</tr>
			<tr>
				<td>FAU_GEN.2 - User identity association</td>
				<td>
				  FAU_GEN.1.2 explicitly requires that the OS record
				  any user account associated with each event; therefore, it is duplicative
				  to include a separate requirement to associate a user account with each
				  event.
				</td>
			</tr>
			<tr>
				<td>FAU_SAR.1 - Audit review</td>
				<td>
					FPT_ACF_EXT.1.2 requires that audit logs (and other objects)
					are protected from reading by unprivileged users; therefore, it is duplicative
					to include a separate requirement to protect only the audit information.
				</td>
			</tr>
		</table>

	</appendix>

	<!-- Entropy documentation -->
	<appendix title="Entropy Documentation and Assessment" id="entropyappendix"> 
		<h:p>
			This appendix describes the required supplementary information for the entropy
		  source used by the TOE.
			</h:p><h:p>
		  The documentation of the entropy source should be detailed enough that, after
		  reading, the evaluator will thoroughly understand the entropy source and why
		  it can be relied upon to provide sufficient entropy. This documentation should
		  include multiple detailed sections: design description, entropy justification,
		  operating conditions, and health testing. This documentation is not required to
		  be part of the TSS. 
		</h:p>
		<section id="entropydesign" title="Design Description">
			<h:p>
		  Documentation shall include the design of the entropy source as a whole,
		  including the interaction of all entropy source components. Any information
		  that can be shared regarding the design should also be included for any
		  third-party entropy sources that are included in the product. 
			</h:p><h:p>
		  The documentation will describe the operation of the entropy source to
		  include, how entropy is produced, and how unprocessed (raw) data can be
		  obtained from within the entropy source for testing purposes. The documentation
		  should walk through the entropy source design indicating where the entropy
		  comes from, where the entropy output is passed next, any post-processing
		  of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally,
		  how it is output from the entropy source. Any conditions placed on the
		  process (e.g., blocking) should also be described in the entropy source
		  design. Diagrams and examples are encouraged. 
			</h:p><h:p>
		  This design must also include a description of the content of the
		  security boundary of the entropy source and a description of how
		  the security boundary ensures that an adversary outside the boundary
		  cannot affect the entropy rate.
			</h:p><h:p>
		  If implemented, the design description shall include a description
		  of how third-party applications can add entropy to the RBG. A
		  description of any RBG state saving between power-off and
		  power-on shall be included.
			</h:p>
		</section>

		<section id="entropyjustification" title="Entropy Justification">
			<h:p>
		  There should be a technical argument for where the unpredictability in
		  the source comes from and why there is confidence in the entropy source
		  delivering sufficient entropy for the uses made of the RBG output
		  (by this particular TOE). This argument will include a description of
		  the expected min-entropy rate (i.e. the minimum entropy (in bits) per
		  bit or byte of source data) and explain that sufficient entropy is
		  going into the TOE randomizer seeding process. This discussion will
		  be part of a justification for why the entropy source can be relied
		  upon to produce bits with entropy.
			</h:p><h:p>
		  The amount of information necessary to justify the expected
		  min-entropy rate depends on the type of entropy source included in the
		  product.
			</h:p><h:p>
		  For developer provided entropy sources, in order to justify the
		  min-entropy rate, it is expected that a large number of raw source
		  bits will be collected, statistical tests will be performed, and the
		  min-entropy rate determined from the statistical tests. While no
		  particular statistical tests are required at this time, it is expected
		  that some testing is necessary in order to determine the amount of
		  min-entropy in each output.
			</h:p><h:p>
		  For third party provided entropy sources, in which the TOE vendor
		  has limited access to the design and raw entropy data of the source, the
		  documentation will indicate an estimate of the amount of min-entropy
		  obtained from this third-party source.  It is acceptable for the vendor
		  to “assume” an amount of min-entropy, however, this assumption must be
		  clearly stated in the documentation provided.  In particular, the
		  min-entropy estimate must be specified and the assumption included
		  in the ST.
			</h:p><h:p>
		  Regardless of type of entropy source, the justification will also
		  include how the DRBG is initialized with the entropy stated in the ST,
		  for example by verifying that the min-entropy rate is multiplied by the
		  amount of source data used to seed the DRBG or that the rate of entropy
		  expected based on the amount of source data is explicitly stated and
		  compared to the statistical rate. If the amount of source data used to
		  seed the DRBG is not clear or the calculated rate is not explicitly
		  related to the seed, the documentation will not be considered complete.
			</h:p><h:p>
		  The entropy justification shall not include any data added from
		  any third-party application or from any state saving between restarts.
			</h:p>
		</section>

		<section id="entropyoperatingconditions" title="Operating Conditions">
		  The entropy rate may be affected by conditions outside the control
		  of the entropy source itself.  For example, voltage, frequency,
		  temperature, and elapsed time after power-on are just a few of the
		  factors that may affect the operation of the entropy source.
		  As such, documentation will also include the range of operating conditions
		  under which the entropy source is expected to generate random data.
		  It will clearly describe the measures that have been taken in the
		  system design to ensure the entropy source continues to operate
		  under those conditions. Similarly, documentation shall describe
		  the conditions under which the entropy source is known to malfunction
		  or become inconsistent. Methods used to detect failure or degradation
		  of the source shall be included.
		</section>

		<section id="entropyhealthtesting" title="Health Testing">
		  More specifically, all entropy source health tests and their rationale
		  will be documented. This will include a description of the health tests,
		  the rate and conditions under which each health test is performed
		  (e.g., at startup, continuously, or on-demand), the expected results
		  for each health test, and rationale indicating why each test is
		  believed to be appropriate for detecting one or more failures in the
		  entropy source.
		</section>
  
	</appendix>

	<appendix id="apndx-equiv" title="Application Software Equivalency Guidelines">
		
		<section id="approach" title="Approach to Equivalency Analysis">
			<h:p>
		  There are two scenarios for performing equivalency analysis. One is when a product has been certified and the vendor 
		  wants to show that a later product should be considered certified due to equivalence with the earlier product. The 
		  other is when multiple product variants are going though evaluation together and the vendor would like to reduce 
		  the amount of testing that must be done. The basic rules for determining equivalence are the same in both cases. 
		  But there is one additional consideration that applies to equivalence with previously certified products. That is, 
		  the product with which equivalence is being claimed must have a valid certification in accordance with scheme rules
		  and the Assurance Maintenance process must be followed. If a product’s certification has expired, then equivalence 
		  cannot be claimed with that product.
			</h:p><h:p>
		  When performing equivalency analysis, the Evaluator/Vendor should first use the factors and guidelines for Product
		  Model equivalence to determine the set of Product Models to be evaluated. In general, Product Models that do not differ 
		  in PP-specified security functionality are considered equivalent for purposes of evaluation against the AppPP.
			</h:p><h:p>
		  If multiple revision levels of Product Models are to be evaluated—or to determine whether a revision of an evaluated 
		  product needs re-evaluation—the Evaluator/Vendor and Validator should use the factors and guidelines for Product 
		  Version equivalence to analyze whether Product Versions are equivalent.
			</h:p><h:p>
		  Having determined the set of Product Models and Versions to be evaluated, the next step is to determine the set of
		  Platforms that the Products must be tested on.
			</h:p><h:p>
		  Each non-equivalent Product for which compliance is claimed must be fully tested on each non-equivalent platform 
		  for which compliance is claimed. For non-equivalent Products on equivalent platforms, only the differences that
		  affect PP-specified security functionality must be tested for each product.
			</h:p><h:p>
		  <h:b><h:i>“Differences in PP-Specified Security Functionality” Defined</h:i></h:b>
			</h:p><h:p>
		  If PP-specified security functionality is implemented by the TOE, then differences in the actual implementation
		  between versions or product models break equivalence for that feature. Likewise, if the TOE implements the 
		  functionality in one version or model and the functionality is implemented by the platform in another version 
		  or model, then equivalence is broken. If the functionality is implemented by the platform in multiple models or 
		  versions on equivalent platforms, then the functionality is considered different if the product invokes the platform 
		  differently to perform the function.
			</h:p>
		</section>
		<section id="modelequiv" title="Specific Guidance for Determining Product Model Equivalence">
		  <h:p>
		  Product Model equivalence attempts to determine whether different feature levels of the same product across 
		  a product line are equivalent for purposes of PP testing. For example, if a product has a “basic” edition and an “enterprise” 
		  edition, is it necessary to test both models? Or does testing one model provide sufficient assurance that both models 
		  are compliant?
		  </h:p><h:p>
		  Product models are considered equivalent if there are no differences that affect PP-specified security 
		  functionality—as indicated in Table 1.
		  </h:p><h:p>
		  
		  <h:table border="1">
			<h:tr class="header" bgcolor="#cccccc">
			  <h:td valign="top">Factor</h:td>
			  <h:td valign="top">Same/Different</h:td>
			  <h:td valign="top">Guidance</h:td>
			</h:tr>
			<h:tr>
			  <h:td rowspan="2" valign="top">PP-Specified Functionality</h:td>
			  <h:td valign="top">Same</h:td>
			  <h:td valign="top">If the differences between Models affect only non-PP-specified functionality, then the Models are equivalent. </h:td>
			</h:tr>
			<h:tr>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">If PP-specified security functionality is affected by the differences between Models, 
				then the Models are not equivalent and must be tested separately. It is necessary only to test the functionality 
				affected by the software differences. If only differences are tested, then the differences must be enumerated, 
				and for each difference the Vendor must provide an explanation of why each difference does or does not affect 
				PP-specified functionality. If the Product Models are separately tested fully, then there is no need to document the differences. 
			  </h:td>
			</h:tr>
		  </h:table>
		  <h:b>Table 1. Determining Product Model Equivalence</h:b>
		  </h:p>
		</section>
		<section id="versionequiv" title="Specific Guidance for Determining Product Version Equivalence">
		  <h:p>
		  In cases of version equivalence, differences are expressed in terms of changes implemented in revisions 
		  of an evaluated Product. In general, versions are equivalent if the changes have no effect on any 
		  security-relevant claims about the TOE or assurance evidence. Non-security-relevant changes to TOE 
		  functionality or the addition of non-security-relevant functionality does not affect equivalence.
		  </h:p><h:p>
		  <h:table border="1">
			<h:tr class="header" bgcolor="#cccccc">
			  <h:td valign="top">Factor</h:td>
			  <h:td valign="top">Same/Different</h:td>
			  <h:td valign="top">Guidance</h:td>
			</h:tr>
			<h:tr valign="top">
			  <h:td valign="top">Product Models</h:td>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">Versions of different Product Models are not equivalent unless the Models are equivalent as defined in Section 3.</h:td>
			</h:tr>
			<h:tr>
			  <h:td rowspan="2" valign="top">PP-Specified Functionality</h:td>
			  <h:td valign="top">Same</h:td>
			  <h:td valign="top">If the differences affect only non-PP-specified functionality, then the Versions are equivalent. </h:td>
			</h:tr>
			<h:tr>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">If PP-specified security functionality is affected by the differences, then the 
				Versions are not considered equivalent and must be tested separately. It is necessary only to test 
				the functionality affected by the changes. If only the differences are tested, then for each 
				difference the Vendor must provide an explanation of why the difference does or does not affect 
				PP-specified functionality. If the Product Versions are separately tested fully, then there is 
				no need to document the differences. </h:td>
			</h:tr>
		  </h:table>
		  <h:b>Table 2. Factors for Determining Product Version Equivalence</h:b>
		  </h:p>
		</section>
		<section id="platformequiv" title="Specific Guidance for Determining Platform Equivalence">
		  <h:p>
		  Platform equivalence is used to determine the platforms that equivalent versions of a Product must be tested on. 
		  Platform equivalence analysis done for one software application cannot be applied to another software application.
		  Platform equivalence is not general—it is with respect to a particular application. 
		  </h:p><h:p>
		  Product Equivalency analysis must already have been done and Products have been determined to be equivalent.
		  </h:p><h:p>
		  The platform can be hardware or virtual hardware, an operating system or similar entity, or a software execution 
		  environment such as a container. For purposes of determining equivalence for software applications, we address each
		  type of platform separately. In general, platform equivalence is based on differences in the interfaces between the 
		  TOE and Platform that are relevant to the implementation of PP-specified security functionality.
		  </h:p>
		  <section id="hardware-equiv" title="Platform Equivalence—Hardware/Virtual Hardware Platforms">
			<h:p>
				If an application runs directly on hardware without an operating system—or directly on virtualized 
			hardware without an operating system—then platform equivalence is based on processor architecture and 
			instruction sets. In the case of virtualized hardware, it is the virtualized processor and architecture 
			that are presented to the application that matters—not the physical hardware.
		  </h:p><h:p>
			Platforms with different processor architectures and instruction sets are not equivalent. This is not 
			likely to be an issue for equivalency analysis for applications since there is likely to be a different 
			version of the application for different hardware environments.
			Equivalency analysis becomes important when comparing processors with the same architecture. Processors 
			with the same architecture that have instruction sets that are subsets or supersets of each other are not
			disqualified from being equivalent for purposes of an App evaluation. If the application takes the same 
			code paths when executing PP-specified security functionality on different processors of the same family, 
			then the processors can be considered equivalent with respect to that application.
			For example, if an application follows one code path on platforms that support the AES-NI instruction 
			and another on platforms that do not, then those two platforms are not equivalent with respect to that 
			application functionality. But if the application follows the same code path whether or not the platform 
			supports AES-NI, then the platforms are equivalent with respect to that functionality.
		  </h:p><h:p>
			The platforms are equivalent with respect to the application if the platforms are equivalent with respect to all PP-specified
			security functionality.
			<h:table border="1">
			  <h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Architectures</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms that present different processor architectures and instruction sets to the application are not equivalent.</h:td>
			  </h:tr>
			  <h:tr>
				<h:td valign="top">PP-Specified Functionality</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">For platforms with the same processor architecture, the platforms are equivalent with
				  respect to the application if execution of all PP-specified security functionality follows the same code path on both platforms.</h:td>
			  </h:tr>
			</h:table>
			<h:b>Table 3. Factors for Determining Hardware/Virtual Hardware Platform Equivalence</h:b>
		  </h:p>
		  </section>
		  <section id="os-equiv" title="Platform Equivalence—OS Platforms">
			<h:p>
			For traditional applications that are built for and run on operating systems, platform equivalence is 
			determined by the interfaces between the application and the operating system that are relevant to PP-specified 
			security functionality. Generally, these are the processor interface, device interfaces, and OS APIs. The following 
			factors applied in order:
			
			<h:table border="1">
			  <h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Architectures</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms that run on different processor architectures and instruction sets are not equivalent.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Vendors</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms from different vendors are not equivalent. </h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Versions</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms from the same vendor with different major version numbers are not equivalent.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Interfaces</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms from the same vendor and major version are not equivalent if there are
				  differences in device interfaces and OS APIs that are relevant to the way the platform provides PP-specified 
				  security functionality to the application. </h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Interfaces</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">Platforms from the same vendor and major version are equivalent if there are 
				  no differences in device interfaces and OS APIs that are relevant to the way the platform 
				  provides PP-specified security functionality to the application, or if the Platform does 
				  not provide such functionality to the application.</h:td>
			  </h:tr>
			  
			</h:table>
			<h:b>Table 4. Factors for Determining OS/VS Platform Equivalence</h:b>
			</h:p>
		
		  </section>
		  <section id="software-equiv" title="Software-based Execution Environment Platform Equivalence">
			<h:p>
			If an Application is built for and runs in a non-OS software-based execution environment, such as a Container or 
			Java Runtime, then the below criteria must be used to determine platform equivalence. The key point is that the 
			underlying hardware (virtual or physical) and OS is not relevant to platform equivalence. This allows applications 
			to be tested and run on software-based execution environments on any hardware—as in cloud deployments.
			
			<h:table border="1">
			  <h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Type/Vendor</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Software-based execution environments that are substantially different or come 
				  from different vendors are not equivalent. For example, a Java virtual machine is not the same as a 
				  container. A Docker container is not the same as a CoreOS container.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Versions</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Execution environments that are otherwise equivalent are not equivalent if they have 
				  different major version numbers.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">PP-Specified Security Functionality</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">All other things being equal, execution environments are equivalent if there is no 
				  significant difference in the interfaces through which the environments provide PP-specified security 
				  functionality to applications.</h:td>
			  </h:tr>
			</h:table>
			<h:b>Table 5. Factors for Software-based Execution Environment Platform Equivalence</h:b>
			</h:p>
		  </section>
		</section>
		<section id="specificity" title="Level of Specificity for Tested Configurations and Claimed Equivalent Configurations">
			<h:p>
		  In order to make equivalency determinations, the vendor and evaluator must agree on the equivalency claims. They must 
		  then provide the scheme with sufficient information about the TOE instances and platforms that were evaluated, and the 
		  TOE instances and platforms that are claimed to be equivalent.
			</h:p><h:p>
		  The ST must describe all configurations evaluated down to processor manufacturer, model number, and microarchitecture version. 
			</h:p><h:p>
		  The information regarding claimed equivalent configurations depends on the platform that the application was developed for and runs on.
			</h:p><h:p>
		  <h:b>Bare-Metal Applications</h:b>
			</h:p><h:p>
		  For applications that run without an operating system on bare-metal or virtual bare-metal, the claimed configuration must 
		  describe the platform down to the specific processor manufacturer, model number, and microarchitecture version. The Vendor
		  must describe the differences in the TOE with respect to PP-specified security functionality and how the TOE functions
		  differently to leverage platform differences (e.g., instruction set extensions) in the tested configuration versus the 
		  claimed equivalent configuration. 
			</h:p><h:p>
		  <h:b>Traditional Applications</h:b>
			</h:p><h:p>
		  For applications that run with an operating system as their immediate platform, the claimed configuration must describe 
		  the platform down to the specific operating system version. If the platform is a virtualization system, then the claimed 
		  configuration must describe the platform down to the specific virtualization system version. The Vendor must describe the 
		  differences in the TOE with respect to PP-specified security functionality and how the TOE functions differently to leverage
		  platform differences in the tested configuration versus the claimed equivalent configuration. Relevant platform differences 
		  could include instruction sets, device interfaces, and OS APIs invoked by the TOE to implement PP-specified security 
		  functionality.
			</h:p><h:p>
		  <h:b>Software-Based Execution Environments</h:b>
			</h:p><h:p>
		  For applications that run in a software-based execution environment such as a Java virtual machine or a Container, then 
		  the claimed configuration must describe the platform down to the specific version of the software execution environment. 
		  The Vendor must describe the differences in the TOE with respect to PP-specified security functionality and how the TOE 
		  functions differently to leverage platform differences in the tested configuration versus the claimed equivalent 
		  configuration.
			</h:p>
		</section>
	</appendix>

	<!-- Abbreviations appendix is auto generated here -->
	
	<!-- Bibliography is auto generated here with CC and CEM docs. If you want other docs -->
	<!-- included, add them here. -->
	<bibliography>
      <entry id="bibCESG">
        <tag>CESG</tag>
        <description>CESG - <h:a
            href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End
            User Devices Security and Configuration Guidance</h:a></description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <h:a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</h:a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf"
            >Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
	</bibliography>

</Module>